[{"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\index.js":"1","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\App.js":"2","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\404.jsx":"3","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Teachers.jsx":"4","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Сheckpoints.jsx":"5","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Login.jsx":"6","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Admins.jsx":"7","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadApplication.jsx":"8","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\hooks\\UseInterceptor.js":"9","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInput.jsx":"10","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInputBtns.jsx":"11","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadTabs.jsx":"12","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadNoteList.jsx":"13","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Header.jsx":"14","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Breadcrumb.jsx":"15","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\StudentsList.jsx":"16","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\AddedStudentsList.jsx":"17","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\interceptor.js":"18","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\admins_components\\Edit.jsx":"19"},{"size":203,"mtime":1709095323350,"results":"20","hashOfConfig":"21"},{"size":1125,"mtime":1709095323349,"results":"22","hashOfConfig":"21"},{"size":1245,"mtime":1709095323351,"results":"23","hashOfConfig":"21"},{"size":2933,"mtime":1709095323352,"results":"24","hashOfConfig":"21"},{"size":6766,"mtime":1709095323357,"results":"25","hashOfConfig":"21"},{"size":9283,"mtime":1709095323352,"results":"26","hashOfConfig":"21"},{"size":22584,"mtime":1709115557572,"results":"27","hashOfConfig":"21"},{"size":6926,"mtime":1709095323354,"results":"28","hashOfConfig":"21"},{"size":1666,"mtime":1709095323349,"results":"29","hashOfConfig":"21"},{"size":4742,"mtime":1709095323354,"results":"30","hashOfConfig":"21"},{"size":1478,"mtime":1709095323355,"results":"31","hashOfConfig":"21"},{"size":2001,"mtime":1709095323356,"results":"32","hashOfConfig":"21"},{"size":3266,"mtime":1709095323355,"results":"33","hashOfConfig":"21"},{"size":7005,"mtime":1709095323353,"results":"34","hashOfConfig":"21"},{"size":706,"mtime":1709095323352,"results":"35","hashOfConfig":"21"},{"size":3315,"mtime":1709095323356,"results":"36","hashOfConfig":"21"},{"size":1100,"mtime":1709095323353,"results":"37","hashOfConfig":"21"},{"size":1672,"mtime":1709095323350,"results":"38","hashOfConfig":"21"},{"size":471,"mtime":1710586050180,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nw3h1m",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\index.js",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\App.js",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\404.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Teachers.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Сheckpoints.jsx",["99"],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Login.jsx",["100"],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Admins.jsx",["101","102","103","104"],[],"import React, { useEffect, useState } from 'react'\r\nimport HeaderNav from './components/Header'\r\nimport useInterceptors from \"../hooks/UseInterceptor\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {Info, Book, Mail, User, PenTool, ArrowLeft} from 'react-feather';\r\n\r\n\r\nimport Edit_input from './admins_components/Edit';\r\n\r\n\r\nconst Admins = () => {\r\n  let [isValid, setIsValid] = useState(false)\r\n  const navigateTo = useNavigate()\r\n  let [respondForSearch, setRespondForSearch] = useState([])\r\n  let [messageIfErr, setMessageIfErr] = useState('')\r\n  let [isModal, setIsModal] = useState(false)\r\n  let [personInModal, setPersonInModal] = useState({})\r\n  //let [birth, setBirth] = useState()\r\n  const axiosInterceptors = useInterceptors()\r\n\r\n\r\n    let [userInfoPanel, setUserInfoPanel] = useState(true)\r\n    let [userData, setUserData] = useState()\r\n  useEffect(()=>{\r\n       const fetchTeachersData = async ()=>{\r\n           await axiosInterceptors.post(\"/check_page\")\r\n               .then(data=>{\r\n                //console.log(data.data)\r\n                   if (data.data) {\r\n                       setIsValid(true)\r\n                   }\r\n               })\r\n               .catch((error)=>{\r\n                   navigateTo(\"/error_page?statusCode=500&errorMessage=\"+ error)\r\n               })\r\n       }\r\n       fetchTeachersData()\r\n\r\n   },[axiosInterceptors, navigateTo])\r\n\r\n   \r\n\r\n   async function findStudents(e){\r\n       e.preventDefault()\r\n       let bodyForm = {\r\n           search: e.target.value\r\n       }\r\n       if(e.target.value.length >= 2){\r\n           await axiosInterceptors.post(\"/search_for_admins\", bodyForm)\r\n               .then(data =>{\r\n                   //console.log(data.data)\r\n                   if(typeof data.data !== 'undefined' && typeof data.data[Symbol.iterator] === 'function'){\r\n                    const arr = []\r\n                    for (let z of data.data){\r\n                        let newObj = {}\r\n                        let existingObj = arr.find((person)=> person.snils === z['snils'])\r\n                        //console.log(existingObj)\r\n                        if(existingObj!==undefined){\r\n                          existingObj.famyly.push(\r\n                            {\r\n                              parent_id: z['parent_id'],\r\n                              parent_name: z['parent_name'],\r\n                              parent_role: z['parent_role'],\r\n                              job: z['job'],\r\n                              job_place: z['job_place'],\r\n                              parent_phone: z['parent_phone'],\r\n                              parent_email: z['parent_email']\r\n                            }\r\n                          )\r\n                        } else {\r\n                          newObj.id_student =  z['id_student']\r\n                          newObj.name = z['name']\r\n                          newObj.surname = z['surname']\r\n                          newObj.patronymic = z['patronymic']\r\n                          newObj.graduation = z['graduation']\r\n                          newObj.email = z['email']\r\n                          newObj.phone = z['phone']\r\n                          newObj.checkpoints = z['checkpoints']\r\n                          newObj.snils = z['snils']\r\n                          newObj.birth_day = z['birth_day']\r\n                          newObj.gender = z['gender']\r\n                          newObj.adress = z['adress']\r\n                          newObj.room =z['room']\r\n                          newObj.violations = z['violations']\r\n                          newObj.date_of_enroll = z['date_of_enroll']\r\n                          newObj.enroll_order_num = z['enroll_order_num']\r\n                          newObj.nationality = z['nationality']\r\n                          newObj.subsid = z['subsid']\r\n                          newObj.family_length = z['family_length']\r\n                          newObj.famyly = [{\r\n                            parent_id: z['parent_id'],\r\n                            parent_name: z['parent_name'],\r\n                            parent_role: z['parent_role'],\r\n                            job: z['job'],\r\n                            job_place: z['job_place'],\r\n                            parent_phone: z['parent_phone'],\r\n                            parent_email: z['parent_email']\r\n                          }]\r\n                          arr.push(newObj)\r\n                        }\r\n                      }\r\n                      console.log(arr)\r\n                    setRespondForSearch(arr)\r\n                   }\r\n                   else{\r\n                    console.log(data.data.respond)//-------------------tut nado budet vivodit oshibki\r\n                       //setMessageIfErr(data.response.data)\r\n                   }\r\n\r\n               })\r\n       }\r\n   }\r\n \r\n\r\n   let showInfo =  (e)=>{\r\n    setUserInfoPanel(true)\r\n    setIsModal(true)\r\n    setPersonInModal(respondForSearch.filter(el=>el.id_student===parseInt(e.currentTarget.id))[0])\r\n    \r\n   }\r\n\r\n   \r\n   let closeModal = ()=>{\r\n    setIsEdit(true)\r\n    setIsModal(false)\r\n   }\r\n    \r\n   let[parentInfo, setParentInfo] = useState()\r\n    function showParentInfo(e){\r\n        let parentId = parseInt(e.currentTarget.id)\r\n        setUserData(undefined)\r\n        setKlassRukData(undefined)\r\n        setUserInfoPanel(false)\r\n        setParentInfo(\r\n            personInModal.famyly.filter(\r\n                el=>el.parent_id===parentId\r\n            )[0]\r\n        )\r\n    }\r\nasync function showVospit(e){\r\n    await axiosInterceptors.get(\"/show_vospit_info/\"+e.currentTarget.id).then(\r\n        data=>{\r\n            console.log(data.data)\r\n            if(data){\r\n                setKlassRukData(undefined)\r\n                setUserData(data.data[0])\r\n                setUserInfoPanel(false)\r\n            }\r\n        }\r\n    )\r\n    \r\n}\r\n\r\nlet [klassrukData, setKlassRukData] = useState()\r\nasync function showKlassRuk(e){\r\n    await axiosInterceptors.get(\"/show_classruk_info/\"+e.currentTarget.id).then(\r\n        data=>{\r\n            console.log(data.data)\r\n            if(data){\r\n                setUserData(undefined)\r\n                setKlassRukData(data.data[0])\r\n                setUserInfoPanel(false)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nlet [isedit, setIsEdit] = useState(true)//редактирование ученика\r\nfunction editUserInfo(e){\r\n    setIsEdit(false)\r\n    //console.log(isedit)\r\n}\r\n\r\nreturn isValid ? (\r\n    <>\r\n      <HeaderNav/>\r\n      <div className=\"container\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-group mb-3\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Введите класс или ФИО\" onInput={findStudents}/>\r\n            <button className=\"btn btn-outline-primary\" type=\"button\" id=\"button-addon2\" onClick={findStudents}>ПОИСК</button>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n\r\n{/* Modalnoe okno */}\r\n    { isModal ?\r\n        <div className=\"modal fade show\" id=\"staticBackdropLive\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLiveLabel\" style={{display: \"block\", backgroundColor: \"rgba(0,0,0,0.7)\"}} aria-modal=\"true\" role=\"dialog\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={closeModal}></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <h3>\r\n                            {isedit === true ? \"\"+personInModal.surname+\" \"+personInModal.name + \" \" +personInModal.patronymic : <Edit_input {...{name: \"\"+personInModal.surname+\" \"+personInModal.name + \" \" +personInModal.patronymic}} />}\r\n                            \r\n                        </h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"modal-body\" style={(()=>{\r\n                        let mystyle = {\r\n                            borderTop: 'var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color)',\r\n                            backgroundColor: '#FFF4F4',\r\n                            color: '#000'\r\n                        }\r\n                        if(personInModal.violations==2){\r\n                            mystyle.backgroundColor = '#FF9B50'\r\n                        }\r\n                        else if(personInModal.violations>2){\r\n                            mystyle.backgroundColor = '#E25E3E'\r\n                            mystyle.color = '#ffff'\r\n                        }\r\n                        return mystyle\r\n                    })()}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Класс:</p>\r\n                                <h6>{personInModal.graduation}</h6>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Комната:</p>\r\n                                <h6>{personInModal.room}</h6>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Объяснительных:</p>\r\n                                <h6>{personInModal.violations}</h6>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n\r\n                    <div className=\"modal-body\" style={{borderTop: 'var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color)'}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Адрес:</p>\r\n                                <h6 style={{fontSize: '0.9rem'}}>{personInModal.adress}</h6>\r\n\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>СНИЛС:</p>\r\n                                <h6>{personInModal.snils}</h6>\r\n\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Субсидии:</p>\r\n                                <h6>{personInModal.subsid}</h6>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Телефон:</p>\r\n                                <h6>{personInModal.phone}</h6>\r\n\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Email:</p>\r\n                                <h6><a href={'mailto:'+personInModal.email} target='_blank' rel=\"noreferrer\" className=\"btn btn-light\"><span style={{color: '#0d6efd'}}><Mail /></span> {personInModal.email}</a></h6>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"modal-body\" style={{borderTop: 'var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color)'}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Пол:</p>\r\n                                <h6>{personInModal.gender.charAt(0).toUpperCase() + personInModal.gender.slice(1)}</h6>\r\n\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Национальность:</p>\r\n                                <h6>{personInModal.nationality}</h6>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Год рождения:</p>\r\n                                <h6>{personInModal.birth_day}</h6>\r\n                                \r\n                                <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Полных лет:</p>\r\n                                <h6>\r\n                                    {\r\n                                        (()=>{\r\n                                            let yearNow = new Date().getFullYear()\r\n                                            let birthYear = parseInt(personInModal.birth_day.split('-')[0])\r\n                                            return yearNow - birthYear\r\n                                        })()\r\n                                    }\r\n                                </h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"modal-body\" style={{borderTop: 'var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color)'}}>\r\n                        {userInfoPanel ?\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    {\r\n                                        (()=>{\r\n                                            let family_arr = []\r\n                                            if(personInModal.famyly[0].parent_id !== undefined){\r\n                                                for(let x of personInModal.famyly){\r\n                                                    family_arr.push(\r\n                                                            <h6 key={x.parent_id}>\r\n                                                                <button className=\"btn btn-light\" id={x.parent_id} onClick={showParentInfo}>\r\n                                                                    <span style={{color: '#0d6efd'}}><User/> </span>\r\n                                                                    {x.parent_role.charAt(0).toUpperCase() + x.parent_role.slice(1)}\r\n                                                                </button>\r\n                                                            </h6>\r\n                                                    )\r\n                                                }\r\n                                                return family_arr\r\n                                            }\r\n                                            else {\r\n                                                return <h6>Информации о родителях не заполнена</h6>\r\n                                            }\r\n                                        })()\r\n                                    }\r\n                                    \r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h6>\r\n                                        <button className=\"btn btn-light\" id={personInModal.id_student} onClick={showKlassRuk}>\r\n                                            <span style={{color: '#198754'}}><PenTool/></span> Классрук\r\n                                        </button>\r\n                                    </h6>\r\n                                    <h6>\r\n                                        <button className=\"btn btn-light\" id={personInModal.id_student} onClick={showVospit}><span style={{color: '#198754'}}><PenTool/></span> Воспитатель</button>\r\n                                    </h6>\r\n                                </div>\r\n                            </div>\r\n                            : \r\n                            (userInfoPanel === false && userData !== undefined)?\r\n                            <div className=\"row\">\r\n                                <div className=\"col-10\">\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Имя:</p>\r\n                                    <h6>{userData.vospit_name}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Телефон:</p>\r\n                                    <h6>{userData.vospit_phone}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Email:</p>\r\n                                    <h6>{userData.vospit_email}</h6>\r\n\r\n                                </div>\r\n                                <div className=\"col-2 d-flex justify-content-end\">\r\n                                    <button className='btn-back btn btn-light' onClick={(e)=>setUserInfoPanel(true)}><ArrowLeft/></button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            (userInfoPanel === false && klassrukData !== undefined)?\r\n                            <div className=\"row\">\r\n                                <div className=\"col-10\">\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Имя:</p>\r\n                                    <h6>{klassrukData.klruk_name}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Телефон:</p>\r\n                                    <h6>{klassrukData.klruk_phone}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Email:</p>\r\n                                    <h6>{klassrukData.klruk_email}</h6>\r\n                                </div>\r\n                                <div className=\"col-2 d-flex justify-content-end\">\r\n                                    <button className='btn-back btn btn-light' onClick={(e)=>setUserInfoPanel(true)}><ArrowLeft/></button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"row parent\">\r\n                                <div className=\"col-10\">\r\n        \r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}>Имя:</p>\r\n                                    <h6>{parentInfo.parent_name}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Телефон:</p>\r\n                                    <h6>{parentInfo.parent_phone}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Email:</p>\r\n                                    <h6>{parentInfo.parent_email}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Место работы:</p>\r\n                                    <h6>{parentInfo.job_place}</h6>\r\n\r\n                                    <p style={{marginBottom: '0.1rem', fontSize: '0.7rem'}}> Должность:</p>\r\n                                    <h6>{parentInfo.job}</h6>\r\n                                </div>\r\n                                <div className=\"col-2 d-flex justify-content-end\">\r\n                                    <button className='btn-back btn btn-light' onClick={(e)=>setUserInfoPanel(true)}><ArrowLeft/></button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {/* <div className=\"modal-body\" style={{borderTop: 'var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color)'}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <h6><button className=\"btn btn-light\" ><span style={{color: '#198754'}}><Book/></span> Башкирский</button></h6>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <h6><button className=\"btn btn-light\" ><span style={{color: '#198754'}}><Book/></span> Английский</button></h6>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={editUserInfo}>Редактировать</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Выбрать</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null\r\n    }\r\n{/* Modalnoe okno */}\r\n\r\n        { respondForSearch.length !== 0 &&\r\n            (\r\n                <>\r\n                <div className='row'>\r\n                    <div className=\"col\">\r\n                        <h6>Найдено {respondForSearch.length}</h6>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"list-group\">\r\n                {(()=>{\r\n                    const listItems = []\r\n                    for(let i = 0; i<respondForSearch.length; i++){\r\n                        let student = respondForSearch[i]\r\n                        listItems.push(\r\n                            <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                <span className=\"studentName\" style={{width: \"30%\"}}>{student.name} {student.surname} {student.patronymic}</span>\r\n                                \r\n                                    <span className=\"studentEmail\" style={{color: '#6c757d' }}>{student.graduation}</span>\r\n                                    <span className=\"studentEmail\" style={{color: '#6c757d' }}>{student.email}</span>\r\n                                    <span className=\"studentPhone\" style={{color: '#6c757d' }}>{student.phone}</span>\r\n                                \r\n                                <span style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n\r\n                                    <span className=\"btn btn-outline-primary m-1\" id={student.id_student} onClick={showInfo}>\r\n                                        <span className=\"textInBtn\">Инфо</span> <Info/>\r\n                                    </span>\r\n                                    \r\n                                </span>\r\n                            </li>\r\n                        )\r\n                    }\r\n                    return listItems\r\n                })()}\r\n                </ul>\r\n            </>\r\n            )\r\n                }\r\n                {messageIfErr && <div class=\"alert alert-danger\" role=\"alert\"> {messageIfErr} </div>}\r\n      </div>\r\n    </>\r\n  ) : null\r\n}\r\n\r\nexport default Admins\r\n",[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadApplication.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\hooks\\UseInterceptor.js",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInput.jsx",["105","106"],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInputBtns.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadTabs.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadNoteList.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Header.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Breadcrumb.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\StudentsList.jsx",["107"],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\AddedStudentsList.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\interceptor.js",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\admins_components\\Edit.jsx",[],[],{"ruleId":"108","severity":1,"message":"109","line":61,"column":44,"nodeType":"110","messageId":"111","endLine":61,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":84,"column":37,"nodeType":"114","messageId":"115","endLine":84,"endColumn":38,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":5,"column":15,"nodeType":"119","messageId":"120","endLine":5,"endColumn":19},{"ruleId":"117","severity":1,"message":"121","line":15,"column":22,"nodeType":"119","messageId":"120","endLine":15,"endColumn":37},{"ruleId":"122","severity":1,"message":"123","line":198,"column":130,"nodeType":"124","messageId":"125","endLine":198,"endColumn":237},{"ruleId":"108","severity":1,"message":"109","line":209,"column":52,"nodeType":"110","messageId":"111","endLine":209,"endColumn":54},{"ruleId":"117","severity":1,"message":"126","line":9,"column":9,"nodeType":"119","messageId":"120","endLine":9,"endColumn":17},{"ruleId":"117","severity":1,"message":"127","line":26,"column":13,"nodeType":"119","messageId":"120","endLine":26,"endColumn":27},{"ruleId":"117","severity":1,"message":"128","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":27},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["129","130"],"no-unused-vars","'Book' is defined but never used.","Identifier","unusedVar","'setMessageIfErr' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Edit_input must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'inputRef' is assigned a value but never used.","'notesFromLocal' is assigned a value but never used.","'addedStudentIndex' is assigned a value but never used.",{"messageId":"131","fix":"132","desc":"133"},{"messageId":"134","fix":"135","desc":"136"},"removeEscape",{"range":"137","text":"138"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"139","text":"140"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2704,2705],"",[2704,2704],"\\"]