[{"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\index.js":"1","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\App.js":"2","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Teachers.jsx":"3","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Сheckpoints.jsx":"4","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\404.jsx":"5","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Login.jsx":"6","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadApplication.jsx":"7","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\hooks\\UseInterceptor.js":"8","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadNoteList.jsx":"9","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInput.jsx":"10","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\StudentsList.jsx":"11","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInputBtns.jsx":"12","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadTabs.jsx":"13","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Breadcrumb.jsx":"14","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Header.jsx":"15","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\interceptor.js":"16"},{"size":203,"mtime":1697992589380,"results":"17","hashOfConfig":"18"},{"size":1026,"mtime":1697992589379,"results":"19","hashOfConfig":"18"},{"size":2933,"mtime":1697992589381,"results":"20","hashOfConfig":"18"},{"size":6764,"mtime":1697992589384,"results":"21","hashOfConfig":"18"},{"size":1245,"mtime":1697992589380,"results":"22","hashOfConfig":"18"},{"size":9056,"mtime":1697992589381,"results":"23","hashOfConfig":"18"},{"size":5788,"mtime":1698332938873,"results":"24","hashOfConfig":"18"},{"size":1666,"mtime":1697992589379,"results":"25","hashOfConfig":"18"},{"size":3266,"mtime":1698169607499,"results":"26","hashOfConfig":"18"},{"size":4742,"mtime":1698332133282,"results":"27","hashOfConfig":"18"},{"size":3397,"mtime":1698338555714,"results":"28","hashOfConfig":"18"},{"size":1478,"mtime":1697997383426,"results":"29","hashOfConfig":"18"},{"size":2001,"mtime":1697992589383,"results":"30","hashOfConfig":"18"},{"size":706,"mtime":1697992589381,"results":"31","hashOfConfig":"18"},{"size":7005,"mtime":1697992589382,"results":"32","hashOfConfig":"18"},{"size":1672,"mtime":1697992589380,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1mlb5nu",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\index.js",[],[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\App.js",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Teachers.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Сheckpoints.jsx",["85"],[],"import React, { useEffect, useState } from 'react'\r\nimport HeaderNav from './components/Header'\r\nimport useInterceptors from \"../hooks/UseInterceptor\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {PlusCircle, MinusCircle, Search} from 'react-feather';\r\n\r\nfunction Checkpoints() {\r\n   let [usrId, setUsrId] = useState()\r\n   let [isValid, setIsValid] = useState(false)\r\n   const navigateTo = useNavigate()\r\n   const axiosInterceptors = useInterceptors()\r\n    useEffect(()=>{\r\n        const fetchTeachersData = async ()=>{\r\n            await axiosInterceptors.post(\"/check_page\")\r\n                .then(data=>{\r\n                    if (data.data) {\r\n                        setIsValid(true)\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                    navigateTo(\"/error_page?statusCode=500&errorMessage=\"+error)//TUT KAT TO ETOT MOMENT NUJNO POMENYAT\r\n                })\r\n        }\r\n        fetchTeachersData()\r\n        setUsrId(localStorage.getItem('teacherId'))\r\n    },[axiosInterceptors, navigateTo])\r\n\r\n    let [searchElement, setSearchElement] = useState('')\r\n    \r\n    let [respondForSearch, setRespondForSearch] = useState([])\r\n    let [messageIfErr, setMessageIfErr] = useState('')\r\n\r\n    async function findStudents(e){\r\n        e.preventDefault()\r\n        setSearchElement(e.target.value)\r\n        let bodyForm = {\r\n            search: searchElement\r\n        }\r\n        if(e.target.value.length >= 3){\r\n            await axiosInterceptors.post(\"/search_for_checkpoints\", bodyForm)\r\n                .then(data =>{\r\n                    //console.log(data.data)\r\n                    if(data.data){\r\n                        setRespondForSearch(data.data)\r\n                    }\r\n                    else{\r\n                        setMessageIfErr(data.response.data)\r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n    async function changeCheckpoints(e, variable){\r\n        let std_id = e && e.currentTarget.id.split('_')[1]\r\n        let std_checkpoints = e &&  e.currentTarget.id.split('_')[2]\r\n        await axiosInterceptors.get(`/change_checkpoints/${std_id}/${parseInt(std_checkpoints) + variable}`)//`/change_checkpoints/${std_id}/${parseInt(std_checkpoints) + 10}`\r\n            .then(data=>{\r\n                console.log(data)\r\n                const updatedRespond = respondForSearch.map(student => {\r\n                    if (student.id_student == std_id) {//tut ravenstvo ne menyai RABOTAT NE BUDET\r\n                        return {\r\n                            ...student,\r\n                            checkpoints: parseInt(student.checkpoints) + variable//+10\r\n                        };\r\n                    }\r\n                    return student;\r\n                });\r\n                // Обновление состояния компонента\r\n                setRespondForSearch(updatedRespond)\r\n            })\r\n    }\r\n    async function addCheckpoints(e){//nujno ogranichit eto delo do opredelennogo kolichestva raz navernoe ili poka ostav nadeyas na blagorazumie sotrudnikov. klikat vse ravno zadolbautsya\r\n        changeCheckpoints(e, 10)\r\n    }\r\n    async function subtractCheckpoints(e){\r\n        changeCheckpoints(e, -10)\r\n    }\r\n\r\n    return isValid ? (\r\n        <>\r\n        <HeaderNav></HeaderNav>\r\n            <div className=\"container \">\r\n\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href={`/teacher/${usrId}`}>Домашняя</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Баллы</li>\r\n                    </ol>\r\n                </nav>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"align-self-start input-group mb-3\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control border border-primary\"\r\n                            placeholder='Введите ФИО ученика'\r\n                            name='search'\r\n                            onInput={findStudents} \r\n                        />\r\n                        <span className=\"input-group-text btn btn-outline-primary\" id=\"inputGroup-sizing-default\"><span className=\"textInBtn\">Найти</span> <Search/></span>\r\n                    </div> \r\n                </div>\r\n                { respondForSearch.length !== 0 &&\r\n                    (<ul className=\"list-group\">\r\n                        {(()=>{\r\n                            const listItems = []\r\n                            for(let i = 0; i<respondForSearch.length; i++){\r\n                                let student = respondForSearch[i]\r\n                                listItems.push(\r\n                                    <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <span className=\"studentName\">{student.name} {student.surname} {student.patronymic}</span>\r\n                                        <span className=\"studentEmail\" style={{color: '#6c757d' }}>{student.email}</span>\r\n                                        <span className=\"studentPhone\" style={{color: '#6c757d' }}>{student.phone}</span>\r\n                                        <span style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n\r\n                                            <span className=\"btn btn-outline-primary m-1\" id={'add_'+student.id_student+'_'+student.checkpoints} onClick={addCheckpoints}>\r\n                                                <span className=\"textInBtn\">Добавить</span> <PlusCircle/>\r\n                                            </span>\r\n\r\n                                            <span className=\"btn btn-outline-primary m-1\" id={'subtract_'+ student.id_student+'_'+student.checkpoints} onClick={subtractCheckpoints}>\r\n                                                <span className=\"textInBtn\">Убрать</span> <MinusCircle/>\r\n                                            </span>\r\n                                            \r\n                                            <span className=\"badge bg-primary rounded-pill m-1\" >{student.checkpoints}</span>\r\n                                        </span>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return listItems\r\n                        })()}\r\n                    </ul>)\r\n                }\r\n                {messageIfErr && <div class=\"alert alert-danger\" role=\"alert\"> {messageIfErr} </div>}              \r\n            </div>       \r\n        </>\r\n    ) : null\r\n}\r\n\r\nexport default Checkpoints\r\n","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\404.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\Login.jsx",["86"],[],"import React, { useEffect, useState } from 'react';\r\nimport HeaderNav from './components/Header';\r\n//import axios from 'axios';\r\n//import api from '../interceptor';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport useInterceptors from '../hooks/UseInterceptor';\r\n\r\nconst Login = ()=>{\r\n\r\n    let [inputPasField, passwordSetBehaviorOnInput] = useState({\r\n        valueElements: \"\",\r\n        typeField: \"password\",\r\n        classElements: \"form-control\",\r\n        errorClass: \"\",\r\n        errorText: \"\"\r\n    })\r\n\r\n    function checkIfPasHasMinSymbols(e){\r\n        if(e.target.value.length<4&&e.target.value!==\"\"){\r\n            passwordSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                classElements: \"form-control is-invalid\",\r\n                errorClass: \"invalid-feedback\",\r\n                errorText: \"Пароль не может быть меньше меньше 4 символов\"\r\n            }))\r\n        }\r\n        else {\r\n            passwordSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                classElements: \"form-control\",\r\n                errorClass: \"\",\r\n                errorText: \"\"\r\n            }))\r\n        }\r\n    }\r\n\r\n    function changeDataHandlerOnPassword(e){\r\n        setShowError(\"\")\r\n        if(e.target.value!==''){\r\n            passwordSetBehaviorOnInput(prev=>({\r\n                ...prev, \r\n                valueElements: e.target.value\r\n            }))//nujno budet nedopuskat vvod probelov i drugih znakov\r\n            setShowPswBtnState({\r\n                btnValue: \"Показать\",\r\n                btnClass: \"btn btn-outline-primary\"\r\n            })\r\n        }\r\n        else {\r\n            passwordSetBehaviorOnInput(prev=>({\r\n                ...prev, \r\n                valueElements:\"\",\r\n            }))\r\n            \r\n            setShowPswBtnState({\r\n                btnValue: \"Показать\",\r\n                btnClass: \"btn btn-outline-secondary disabled\"\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    let [inputNumField, numberSetBehaviorOnInput] = useState({\r\n        classElements: \"form-control\",\r\n        valueElements: \"\",\r\n        errorClass: \"\",\r\n        errorText: \"\"\r\n    })\r\n\r\n    function checkIfNumHasMinSymbols(e){\r\n        if(e.target.value.length < 12&&e.target.value!==\"\"){\r\n            numberSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                valueElements: e.target.value.trim(),\r\n                classElements: \"form-control is-invalid\",\r\n                errorClass: \"invalid-feedback\",\r\n                errorText: \"Номер мобильного телефона не может иметь меньше 12 символов\"\r\n            }))\r\n        }\r\n    }\r\n\r\n    function changeDataHandlerOnNumber(e){\r\n        setShowError(\"\")\r\n        if(e.target.value.search(/^[\\+\\d\\s]+$/) === -1 && e.target.value !== \"\"){\r\n            numberSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                valueElements: e.target.value.trim(),\r\n                classElements: \"form-control is-invalid\",\r\n                errorClass: \"invalid-feedback\",\r\n                errorText: \"Вы вводите недопустимое значение\"\r\n            }))\r\n            \r\n        }\r\n        else if(e.target.value.length > 12){\r\n            numberSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                valueElements: e.target.value.trim(),\r\n                classElements: \"form-control is-invalid\",\r\n                errorClass: \"invalid-feedback\",\r\n                errorText: \"Номер мобильного телефона не может быть больше 12 символов\"\r\n            }))\r\n        }\r\n        else if(e.target.value === \"\"){\r\n            numberSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                valueElements: \"\",\r\n                classElements: \"form-control\",\r\n                errorClass: \"\",\r\n                errorText: \"\"\r\n            }))\r\n        }\r\n        else{\r\n            numberSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                valueElements: e.target.value,\r\n                classElements: \"form-control\",\r\n                errorClass: \"\",\r\n                errorText: \"\"\r\n            }))\r\n        }\r\n        \r\n    }\r\n\r\n    let [btnState, setBtnState] = useState(\"btn btn-primary disabled mb-3\")\r\n\r\n    useEffect(()=>{\r\n        if(inputPasField.valueElements!==\"\" && inputNumField.valueElements!==\"\" && inputNumField.errorClass===\"\" && inputPasField.errorClass===\"\"){\r\n            setBtnState(\"btn btn-primary mb-3\")\r\n        }\r\n        else{\r\n            setBtnState(\"btn btn-primary disabled mb-3\")\r\n        }\r\n    }, [inputPasField, inputNumField])\r\n\r\n    let [showPswBtn, setShowPswBtnState] = useState({\r\n        btnValue: \"Показать\",\r\n        btnClass: \"btn btn-outline-secondary disabled\"\r\n    })\r\n    \r\n    function showPsw(e){\r\n        if (inputPasField.typeField === \"password\") {\r\n            passwordSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                typeField: \"text\"\r\n            }))\r\n\r\n            setShowPswBtnState(prev=>({\r\n                ...prev,\r\n                btnValue: \"Скрыть\",\r\n                btnClass: \"btn btn-outline-success\"\r\n            }))\r\n        }\r\n        else{\r\n            passwordSetBehaviorOnInput(prev=>({\r\n                ...prev,\r\n                typeField: \"password\"\r\n            }))\r\n\r\n            setShowPswBtnState(prev=>({\r\n                ...prev,\r\n                btnValue: \"Показать\",\r\n                btnClass: \"btn btn-outline-success\"\r\n            }))\r\n        }\r\n        \r\n    }\r\n    const navigateTo = useNavigate()\r\n    const axiosInterceptors = useInterceptors()\r\n\r\n    let [showError, setShowError] = useState(\"\")\r\n    async function submitForm(e){\r\n        e.preventDefault()\r\n        let bodyForm = {\r\n            phone: inputNumField.valueElements,\r\n            password: inputPasField.valueElements\r\n        }\r\n        await axiosInterceptors.post(\"/login\", bodyForm).then(data=>{\r\n            //console.log(data)\r\n            if(data.data){\r\n                setShowError(\"\")\r\n                localStorage.setItem(\"token\", JSON.stringify(data.data.token))\r\n                localStorage.setItem(\"teacherId\", JSON.stringify(data.data.teacher_id))\r\n                navigateTo(`/${data.data.role}/${data.data.teacher_id}`)\r\n                //console.log(data.data)\r\n            }\r\n            else{\r\n                setShowError(data.response.data)\r\n            }\r\n\r\n        }).catch(error=>{\r\n            console.log(`EEEError: ${error}`)\r\n            setShowError('Ошибка сервера: Попробуйте перезагрузите страницу (F5) и авторизуйтесь снова. Если это не помогает пишите ДР.')\r\n        })\r\n    }\r\n    \r\n    return(\r\n       <>\r\n       <HeaderNav></HeaderNav>\r\n        <main>\r\n                <div className=\"container-xl mt-5\">\r\n                {showError&&<div className=\"alert alert-danger\">{showError}</div>}\r\n                    <div className=\"login-form d-flex flex-column align-items-center justify-content-center\" style={{height: '70vh'}} id=\"divForm\">\r\n                        \r\n                        <h2 className=\"myh2\" style={{marginBottom: '2rem'}}>Вход в систему</h2>\r\n                        \r\n                        <form className=\"g-3\" action=\"/\" method=\"post\" id=\"authorize_form\" >\r\n                            <div className=\"mb-3\">\r\n                                \r\n                                <input type=\"tel\" className={inputNumField.classElements} id=\"phoneNumber\" placeholder=\"Номер телефона\" name=\"number\" value={inputNumField.valueElements} onInput={changeDataHandlerOnNumber} onBlur={checkIfNumHasMinSymbols}/>\r\n\r\n                                {inputNumField.errorClass && <div className={inputNumField.errorClass}>{inputNumField.errorText}</div>}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"mb-3 input-group\">\r\n                                <input type={inputPasField.typeField} onInput={changeDataHandlerOnPassword} onBlur={checkIfPasHasMinSymbols} className={inputPasField.classElements} id=\"pas\" placeholder=\"Пароль\" name=\"password\"/>\r\n                                \r\n                                <button id=\"showPsw\" className={showPswBtn.btnClass}type=\"button\" onClick={showPsw} >{showPswBtn.btnValue}</button>\r\n\r\n                                {inputPasField.errorClass && <div className={inputPasField.errorClass}>{inputPasField.errorText}</div>}\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <input type=\"submit\" onClick={submitForm} className={btnState} id=\"authorize\" value=\"Авторизоваться\" style={{width: '100%'}}/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n       </>\r\n    );\r\n}\r\n \r\nexport default Login;\r\n","C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadApplication.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\hooks\\UseInterceptor.js",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadNoteList.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInput.jsx",["87","88"],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\StudentsList.jsx",["89","90","91"],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadInputBtns.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\olimpiad_application\\OlimpiadTabs.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Breadcrumb.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\pages\\components\\Header.jsx",[],[],"C:\\Users\\user\\Desktop\\RILI_metauniverse\\front_end\\src\\interceptor.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":60,"column":44,"nodeType":"94","messageId":"95","endLine":60,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":84,"column":37,"nodeType":"98","messageId":"99","endLine":84,"endColumn":38,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":9,"column":9,"nodeType":"103","messageId":"104","endLine":9,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":26,"column":13,"nodeType":"103","messageId":"104","endLine":26,"endColumn":27},{"ruleId":"101","severity":1,"message":"106","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":17},{"ruleId":"101","severity":1,"message":"107","line":3,"column":31,"nodeType":"103","messageId":"104","endLine":3,"endColumn":42},{"ruleId":"101","severity":1,"message":"108","line":8,"column":10,"nodeType":"103","messageId":"104","endLine":8,"endColumn":27},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["109","110"],"no-unused-vars","'inputRef' is assigned a value but never used.","Identifier","unusedVar","'notesFromLocal' is assigned a value but never used.","'UserPlus' is defined but never used.","'MinusSquare' is defined but never used.","'addedStudentIndex' is assigned a value but never used.",{"messageId":"111","fix":"112","desc":"113"},{"messageId":"114","fix":"115","desc":"116"},"removeEscape",{"range":"117","text":"118"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"119","text":"120"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2704,2705],"",[2704,2704],"\\"]